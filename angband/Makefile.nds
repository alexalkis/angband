#------------------------------------------------------------------------------
.SUFFIXES:
#------------------------------------------------------------------------------

ifeq ($(strip $(DEVKITARM)),)
$(error "Please set DEVKITARM in your environment. export DEVKITARM=<path to>devkitARM)
endif

include $(DEVKITARM)/ds_rules

include Makefile.src

#------------------------------------------------------------------------------
# TARGET is the name of the output
# BUILD is the directory where object files & intermediate files will be placed
# SOURCES is a list of directories containing source code
# INCLUDES is a list of directories containing extra header files
#------------------------------------------------------------------------------
TARGET		:=	$(NAME)

#------------------------------------------------------------------------------
# options for code generation
#------------------------------------------------------------------------------

# note: arm9tdmi isn't the correct CPU arch, but anything newer and LD
# *insists* it has a FPU or VFP, and it won't take no for an answer!
CFLAGS	:=	-g -Wall -O2\
 			-mcpu=arm9tdmi -mtune=arm9tdmi -fomit-frame-pointer\
			-ffast-math \
			$(ARCH)

CFLAGS	+=	$(INCLUDE) -DARM9

ASFLAGS	:=	-g $(ARCH)

LDFLAGS	=	-g $(ARCH) 

#------------------------------------------------------------------------------
# any extra libraries we wish to link with the project
#------------------------------------------------------------------------------
LIBS	:= 
 
 
#------------------------------------------------------------------------------
# list of directories containing libraries, this must be the top level 
# containing include and lib
#------------------------------------------------------------------------------
LIBDIRS	:=	$(LIBNDS)
 
#------------------------------------------------------------------------------
# no real need to edit anything past this point unless you need to add 
# additional rules for different file extensions
#------------------------------------------------------------------------------
#------------------------------------------------------------------------------
 
export DEPSDIR	:=	$(CURDIR)/.deps

 


# include Makefile.inc

 
DEPENDS	:=	$(BASEOBJS:.o=$(CURDIR)/.d)
 
#------------------------------------------------------------------------------
# main targets
#------------------------------------------------------------------------------
 
#------------------------------------------------------------------------------
$(TARGET).nds	:	$(TARGET).arm7 $(TARGET).arm9
	ndstool	-c $(TARGET).nds -7 $(TARGET).arm7 -9 $(TARGET).arm9

#------------------------------------------------------------------------------
$(TARGET).arm7	: $(TARGET).arm7.elf
	@$(OBJCOPY) -O binary $< $@
	@echo built ... $(notdir $@)

$(TARGET).arm9	: $(TARGET).arm9.elf
	@$(OBJCOPY) -O binary $< $@
	@echo built ... $(notdir $@)
#------------------------------------------------------------------------------
$(TARGET).arm7.elf:
	@[ -d build ] || mkdir build
	$(MAKE) -f nds/Makefile.arm7 all
	
#------------------------------------------------------------------------------

$(TARGET).arm9.elf:
	@[ -d build ] || mkdir build
#	sh -c "unset CC; [ -f src/tile.c ] || make -C util ../src/tile.c"
	@echo hello
	$(MAKE) -f nds/Makefile.arm9 all

 
 
-include $(DEPENDS)
 
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
clean:
	@echo clean ...
	@rm -fr *.o $(TARGET).* 
 
 
